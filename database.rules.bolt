isAuthenticated() {
    return auth.uid !== null && auth.token.email !== null;
}

isAdmin(oid) {
    return root.security.organizations[oid].users[auth.uid] === 'admin';
}

isInNthDomain(organizationId, type, n) {
    return auth.token.email.endsWith('@' + root.security.organizations[organizationId].domains[type]['' + n]);
}

isInDomain(organizationId, type) {
    return isInNthDomain(organizationId, type, 0)
        || isInNthDomain(organizationId, type, 1)
        || isInNthDomain(organizationId, type, 2)
        || isInNthDomain(organizationId, type, 3)
        || isInNthDomain(organizationId, type, 4)
}

isAllowed(resource, privilege, organizationId) {
    return root.security.organizations[organizationId].permissions[
        root.security.organizations[organizationId].users[auth.uid] != null ?
            (root.security.organizations[organizationId].users[auth.uid] === 'admin' ?
                'member' :
                root.security.organizations[organizationId].users[auth.uid]
            ) :
            isInDomain(organizationId, 'member') ? 'member' : (isInDomain(organizationId, 'guest') ? 'guest' : 'anyone')
    ][resource][privilege]
}

isAllowedScope(scope, resource, privilege, oid) {
    return isAllowed((scope === 'organization' ? '' : 'personal_') + resource, privilege, oid) &&
            (scope === 'organization' || scope === auth.uid)
}

path /security/organizations/{oid} {
    read() { isAuthenticated() && isAdmin(oid) }
    write() { isAuthenticated() && (prior(this) == null || isAdmin(oid)) }
}

path /security/organizations/{oid}/permissions/{role} {
    read() { isAuthenticated() && (root.security.organizations[oid].users[auth.uid] === role || root.security.organizations[oid].users[auth.uid] == null && isInDomain(oid, role)) }
}

path /security/organizations/{oid}/users/{uid} {
    read() { isAuthenticated() && (uid === auth.uid || isAllowed('organization', 'read', oid) || isAdmin(oid)) }
    create() { isAuthenticated() && (uid === auth.uid && this === '?' || isAdmin(oid)) }
    update() { isAuthenticated() && isAdmin(oid) }
    delete() { isAuthenticated() && (uid === auth.uid || isAdmin(oid)) }
}

path /journals/organizations/{oid} {
    read() { isAuthenticated() && isAllowed('organization', 'read', oid) }
}
path /journals/organizations/{oid}/{eid} {
    write() { isAuthenticated() && isAllowed(
            this == null ? prior(this.resource) : this.resource,
            (this == null ? prior(this.action) : this.action) === 'comment' ? 'read' : 'write',
            oid
        )
    }
}

path /journals/organizations/{oid} {
  index() {
    ["id", "personal"]
  }
}

path /likes/organizations/{oid} {
    read() { isAuthenticated() && isAllowed('organization', 'read', oid) }
}
path /likes/organizations/{oid}/byUser/{uid}/{rid} {
    write() { isAuthenticated() && isAllowed('organization', 'read', oid) && uid === auth.uid }
}
path /likes/organizations/{oid}/byResource/{rid}/{uid} {
    write() { isAuthenticated() && isAllowed('organization', 'read', oid) && uid === auth.uid }
}

path /scorings/organizations/{oid} {
    read() { isAuthenticated() && isAllowed('organization', 'read', oid) }
}
path /scorings/organizations/{oid}/{rid}/{uid} {
    write() { isAuthenticated() && isAllowed('organization', 'read', oid) && uid === auth.uid }
}

path /watchers/organizations/{oid} {
    read() { isAuthenticated() && isAllowed('organization', 'read', oid) }
    write() { isAuthenticated() && isAdmin(oid) }
}
path /watchers/organizations/{oid}/{rid}/{uid} {
    write() { isAuthenticated() && isAllowed('organization', 'read', oid) }
}

path /views/organizations/{oid} {
    read() { isAuthenticated() && isAllowed('organization', 'read', oid) }
}
path /views/organizations/{oid}/{rid} {
    write() { isAuthenticated() && isAllowed('organization', 'read', oid) && rid === auth.uid }
}
path /views/organizations/{oid}/{rid}/{uid} {
    write() { isAuthenticated() && isAllowed('organization', 'read', oid) && uid === auth.uid }
}

path /flashlight/paths/{pid} {
    read() { false }
    write() {
        isAuthenticated() && (
            this != null && (
                isAdmin(this.index)
                ||
                pid.contains('-' + this.index + '-' + auth.uid + '-') && isAllowed(this.type, 'read', this.index)
            )
            ||
            this == null && (
                prior(this) == null
                ||
                isAdmin(prior(this.index))
                ||
                pid.contains('-' + prior(this.index) + '-' + auth.uid + '-')
            )
        )
    }
}

path /flashlight/queries/{qid} {
    write() {
        isAuthenticated()
        && (
            prior(this) == null
            &&
            isAllowed(this.type === 'users' ? 'organization' : this.type, 'read', this.index)
            ||
            this == null
        )
    }
}

path /flashlight/results/{qid} {
    read() {
        isAuthenticated()
    }
    write() {
        isAuthenticated() && this == null
    }
}

path /flashlight/results {
    index() {
      "timestamp"
    }
}

path /organizations/{oid} is Any {
    read() { isAuthenticated() && (this == null || isAllowed('organization', 'read', oid) || isAdmin(oid)) }
    write() { isAuthenticated() && (isAdmin(oid) || prior(this) == null) }
}
path /organizations/{oid}/name {
    read() { isAuthenticated() }
}



path /users/{uid} {
    read() { auth.uid === uid }
}
path /users/{uid}/organizations/{oid} {
    write() {
        auth.uid === uid && (this === true && isAllowed('organization', 'read', oid) || this === false || this === null)
        ||
        isAllowed('organization', 'read', oid) && this != null && prior(this) == null && this.invitedBy === auth.uid
        ||
        isAdmin(oid)
    }
}

path /users/organizations/{oid} {
    read() { isAuthenticated() && (isAllowed('organization', 'read', oid) || isAdmin(oid)) }
}
path /users/organizations/{oid}/{uid} {
    write() { isAuthenticated() && (uid === auth.uid || isAdmin(oid)) }
}

path /{branch}/organizations/{oid}/{scope}/{type} {
    read() { (branch === 'resources' || branch === 'archive') && isAuthenticated() && isAllowedScope(scope, type, 'read', oid) }
    index() {
      ["updated","dueTime", "created"]
    }
}

path /{branch}/organizations/{oid}/{scope}/{type}/{rid} {
    write() {
        (branch === 'resources' || branch === 'archive')
        && isAuthenticated()
        && isAllowedScope(scope, type, 'write', oid)
        && (
            prior(this) == null ||
            (scope === 'organization' || scope === auth.uid) ||
            this == null && isAdmin(oid)
        )
    }
}

path /{branch}/organizations/{oid}/{scope}/{type}/{rid}/{key} {
    write() {
        (branch === 'resources' || branch === 'archive')
        && (key === 'stats' || key === 'rank')
        && isAuthenticated()
        && isAllowedScope(scope, type, 'read', oid)
    }
}

path /domains/{domain} {
    read() {
        isAuthenticated() && (isAllowed('organization', 'read', this) || isAdmin(this))
    }
    write() {
        isAuthenticated() && (this != null && isAdmin(this) || this == null && isAdmin(prior(this)))
    }
}

